from sqlalchemy import Boolean, Column, ForeignKey, Integer, String, PrimaryKeyConstraint
from sqlalchemy.orm import relationship

from app.routes.relationalDatabase import Base

class Object_Table(Base):
    """
    This table stores
        - ObjectID: This ID refers to the ID of the object in S3
        - ObjectName: This is the name of the object, usually filename
        - Department: This is the department that the object belongs to, if None it belongs to all departments
        - ExcerptID: This ID refers to the ID of the excerpt generated by LLM, an object can have many excerpts.

    The composite primary key is ObjectID and ExcerptID
    """
    __tablename__ = "Object Table"

    ObjectID = Column(String)
    ObjectName = Column(String)
    Department = Column(String)
    ExcerptID = Column(String)
    Upvotes = Column(Integer, default=0)
    Downvotes = Column(Integer, default=0)

    excerpts = relationship("Excerpt", back_populates="object")

    __table_args__ = (
        PrimaryKeyConstraint('ObjectID', 'ExcerptID'),
    )

class ObjectVotes(Base):
    """
    This table stores
        - ObjectID: This ID refers to the ID of the object in S3
        - Upvotes: This is the number of upvotes that the object has
        - Downvotes: This is the number of downvotes that the object has
    """

    __tablename__ = "Object Votes"

    ObjectID = Column(String)
    Upvotes = Column(Integer, default=0)
    Downvotes = Column(Integer, default=0)


    __table_args__ = (
        PrimaryKeyConstraint('ObjectID'),
    )
