from fastapi import APIRouter, Query, File, UploadFile, HTTPException

from sqlalchemy import Boolean, Column, ForeignKey, Integer, String, PrimaryKeyConstraint
from sqlalchemy import create_engine, Column, Integer, String, ForeignKey, UniqueConstraint
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, relationship

# THis includes the initialized RDBS function and the Objects for the MySQL database

# Create the base model for SQLAlchemy
Base = declarative_base()

def initialize_rdbs():
    # Create the SQLAlchemy engine and session
   # Create a connection to the MySQL server without specifying a database
    DATABASE_URL = "mysql+pymysql://root@localhost/citidream"
    engine = create_engine(DATABASE_URL, echo=True)

    # Create a connection to the MySQL server without specifying a database
    connection = engine.connect()

    # Close the connection to the MySQL server

    Base.metadata.create_all(bind=engine)

    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    session = SessionLocal()

    connection.close()
    return session

initialize_rdbs()

# ObjectID | ExcerptID | 
# If it is a PDF, the object will relate to the PDF in S3, isLink = 0, URL = None
# If it is a Link, the objectID will be a random uuid. isLink = 1, URL = link
class ObjectExcerptPair(Base):
    """
    This table stores
        - ObjectID: This ID refers to the ID of the object in S3, or a random UUID if it is a link
        - ExcerptID: This ID refers to the ID of the excerpt generated by LLM, an object can have many excerpts.

    The composite primary key is ObjectID and ExcerptID
    """
    __tablename__ = "ObjectExcerptPair"

    ObjectID = Column(String(64))
    ExcerptID = Column(String(64))
 
    ObjectID = Column(String(64), ForeignKey('ObjectInfo.ObjectID'))
    object_entries = relationship('ObjectInfo', backref='votes')

    __table_args__ = (
        PrimaryKeyConstraint('ObjectID', 'ExcerptID'),
    )


# ObjectID | Name | Upvotes | Downvotes
class ObjectInfo(Base):
    """
    This table stores
        - ObjectID: This ID refers to the ID of the object in S3
        - Upvotes: This is the number of upvotes that the object has
        - Downvotes: This is the number of downvotes that the object has
    """

    __tablename__ = "ObjectInfo"

    ObjectID = Column(String(64))
    ObjectName = Column(String(255))
    Upvotes = Column(Integer, default=0)
    Downvotes = Column(Integer, default=0)
    isLink = Column(Boolean, default=0)
    URL = Column(String(255))

    __table_args__ = (
        PrimaryKeyConstraint('ObjectID'),
    )
